{"__version": 1, "token_id": 495621, "symbol": "OBJKT", "name": "Interpolation From a Circle to an Equilateral Triangle (#06)", "description": "/*\n * \u25ef\u27f7\u25b3 \u2116.06\n * Interpolation From a Circle to an Equilateral Triangle (#06)\n * \"By progressively deleting all vertices along a\n * resampled circle, except for three special vertices,\n * which constitute the triangle's corners.\"\n * Page Six of a 14-Page Pedagogical Sketchbook\n * By Golan Levin (@golan), 2017-2021.\n * https://link.medium.com/bn3sesXYOkb\n *\n * Animated GIF, 1024x1024, 458 frames @~50fps, made with p5.js;\n * Presented October 25, 2017 on the Coding Train episode,\n * \"Guest Tutorial #7: Circle Morphing with Golan Levin\"\n * (https://www.youtube.com/watch?v=mvgcNOX8JGQ&t=14m40s).\n * NFT created in 2021 for #Sketch4Processing, and minted by\n * KT1TaPfAuhmnyo6Le6zKe17opvFCsTxk1VN7 (golan_x_processingorg).\n * Per contract, 20% of all sales are donated to @ProcessingOrg.\n *\n * References:\n * - Joseph Choma, \"Morphing: A Guide to Mathematical\n *   Transformations for Architects and Designers\", 2015.\n * - Guus Craenen and Adrian H\u00e4ne, \"Fruit Salad\", 1970.\n * - CTG Japan (Masao Kohmura, Koji Fujino, Makoto Ohtake),\n *   \"Running Cola is Africa!\", 1968.\n * - Wassily Kandinsky, \"Point and Line to Plane\", 1926.\n * - William Kolomyjec, \"Banana Cone\", 1970-1975.\n * - J\u00fcrg Lehni and Wilm Thoben, \"Footnotes from the History\n *   of Two Cultures: Mitsuo Katsui\", 2015.\n * - Manfred Mohr, \"P-112 / Lady Quark\", 1972.\n * - Bruno Munari, \"Square Circle Triangle\", 1960-1976.\n * - Charles Philipon, \"Les Poires\", 1831.\n * - Troika, \"Squaring the Circle\"; \"Dark Matter\", 2013-2014.\n * - Wucius Wong, \"Principles of Two-Dimensional Design\", 1972.\n * - Yuki Yoshida, \"A Book of drawCircle()\", 2014.\n */\n\nvar xpoints = [];\nvar ypoints = [];\nvar nCirclePoints = 180;\nvar nFrames = 4 * nCirclePoints;\nvar corners = [];\nvar radius;\nvar editIndex;\nvar strokeCol1;\nvar backgrCol;\nvar theta;\n\nfunction setup() {\n  createCanvas(1024, 1024);\n  pixelDensity(1);\n  frameRate(60);\n  strokeCol1 = color(24, 14, 6, 255);\n  backgrCol = color(253, 247, 241);\n  radius = (width / 2) * 0.75;\n\n  var corner1 = (1 * nCirclePoints) / 3;\n  var corner2 = (2 * nCirclePoints) / 3;\n  var corner3 = (3 * nCirclePoints) / 3;\n  corners = [corner1, corner2, corner3];\n}\n\nfunction draw() {\n  background(backgrCol);\n  noFill();\n  stroke(strokeCol1);\n  strokeJoin(MITER);\n  strokeWeight(ceil(width * 0.01));\n\n  push();\n  translate(width / 2, height / 2);\n  rotate(-HALF_PI);\n  beginShape();\n  for (var i = 0; i < xpoints.length; i++) {\n    var px = xpoints[i];\n    var py = ypoints[i];\n    vertex(px, py);\n  }\n  endShape(CLOSE);\n  drawDebug();\n  pop();\n\n  var frameFrac = (frameCount % nFrames) / nFrames;\n  theta = frameFrac * TWO_PI;\n  xpoints = [];\n  ypoints = [];\n  var t, i;\n\n  if (theta <= PI) {\n    editIndex = round(map(theta, 0, PI, nCirclePoints, 0));\n    for (i = 0; i < 3; i++) {\n      if (editIndex <= corners[i]) {\n        t = map(corners[i], 0, nCirclePoints, 0, -TWO_PI);\n        xpoints.push(radius * cos(t));\n        ypoints.push(radius * sin(t));\n      }\n    }\n    for (i = 0; i < editIndex; i++) {\n      t = i * (-TWO_PI / nCirclePoints);\n      xpoints.push(radius * cos(t));\n      ypoints.push(radius * sin(t));\n    }\n  } else {\n    editIndex = round(map(theta, PI, TWO_PI, 0, nCirclePoints));\n    for (i = 0; i <= editIndex; i++) {\n      t = i * (-TWO_PI / nCirclePoints);\n      xpoints.push(radius * cos(t));\n      ypoints.push(radius * sin(t));\n    }\n    for (i = 0; i < 3; i++) {\n      if (editIndex <= corners[i]) {\n        t = map(corners[i], 0, nCirclePoints, 0, -TWO_PI);\n        xpoints.push(radius * cos(t));\n        ypoints.push(radius * sin(t));\n      }\n    }\n  }\n}\n\nfunction drawDebug() {\n  var len = xpoints.length;\n  if (theta >= PI) {\n    if (len >= 4) {\n      var alph = 0.5 - 0.5 * cos(2.0 * theta);\n      stroke(24, 14, 6, 128 * pow(alph, 0.25));\n      strokeWeight(width / 1024.0);\n\n      line(0, 0, xpoints[0], ypoints[0]);\n      if (len <= corners[0] + 3) {\n        line(0, 0, xpoints[len - 4], ypoints[len - 4]);\n        line(0, 0, xpoints[len - 3], ypoints[len - 3]);\n        line(0, 0, xpoints[len - 2], ypoints[len - 2]);\n      } else if (len <= corners[1] + 2) {\n        line(0, 0, xpoints[len - 3], ypoints[len - 3]);\n        line(0, 0, xpoints[len - 2], ypoints[len - 2]);\n      } else if (len <= corners[2] + 1) {\n        line(0, 0, xpoints[len - 2], ypoints[len - 2]);\n      } else if (len <= corners[3] + 1) {\n        line(0, 0, xpoints[len - 1], ypoints[len - 1]);\n      }\n    }\n  }\n}", "artifact_uri": "ipfs://bafybeiffunikdjddlrs2ijf6mkytfx22vu4qmd7ypjfaivcn5k43aibiee", "display_uri": "ipfs://bafybeiffunikdjddlrs2ijf6mkytfx22vu4qmd7ypjfaivcn5k43aibiee", "thumbnail_uri": "ipfs://QmNrhZHUaEqxhyLfqoq1mtHSipkWHeT31LNHb1QEbDHgnc", "formats": [{"uri": "ipfs://bafybeiffunikdjddlrs2ijf6mkytfx22vu4qmd7ypjfaivcn5k43aibiee", "mimeType": "image/gif"}], "creators": ["KT1TaPfAuhmnyo6Le6zKe17opvFCsTxk1VN7"], "tags": ["circle", "triangle", "shape", "interpolation", "morphing", "morph", "tween", "transformation", "transmutation", "metamorphosis", "lofting", "loop", "gif", "geometry", "creativecoding", "pedagogicalsketchbook", "series", "collabcontract", "sketch4processing", "sketchforprocessing", "Processing", "ProcessingOrg", "golan", "golanlevin"], "extra": {}}